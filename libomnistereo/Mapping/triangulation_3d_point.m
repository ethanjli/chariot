function S = triangulation_3d_point ( Xmir, vr)

for i = 1 : size(Xmir,2)

    r = ( vr(1,i,1)*vr(1,i,2)*vr(2,i,2)*Xmir(2,i,1) - vr(1,i,1)*Xmir(1,i,1)*vr(2,i,2)*vr(2,i,2) - vr(1,i,1)*vr(1,i,2)*vr(2,i,2)*Xmir(2,i,2) ...
        + vr(1,i,1)*vr(1,i,2)*vr(3,i,2)*Xmir(3,i,1) - vr(1,i,1)*vr(1,i,2)*vr(3,i,2)*Xmir(3,i,2) - vr(1,i,1)*Xmir(1,i,1)*vr(3,i,2)*vr(3,i,2) ...
        + vr(1,i,1)*Xmir(1,i,2)*vr(2,i,2)*vr(2,i,2) + vr(1,i,1)*Xmir(1,i,2)*vr(3,i,2)*vr(3,i,2) - vr(1,i,2)*vr(1,i,2)*vr(2,i,1)*Xmir(2,i,1) ...
        + vr(1,i,2)*vr(1,i,2)*vr(2,i,1)*Xmir(2,i,2) - vr(1,i,2)*vr(1,i,2)*vr(3,i,1)*Xmir(3,i,1) + vr(1,i,2)*vr(1,i,2)*vr(3,i,1)*Xmir(3,i,2) ...
        + vr(2,i,1)*vr(2,i,2)*vr(3,i,2)*Xmir(3,i,1) - vr(2,i,1)*vr(2,i,2)*vr(3,i,2)*Xmir(3,i,2) + vr(3,i,1)*vr(3,i,2)*vr(2,i,2)*Xmir(2,i,1) ...
        - vr(3,i,1)*vr(3,i,2)*vr(2,i,2)*Xmir(2,i,2) + Xmir(1,i,1)*vr(1,i,2)*vr(2,i,1)*vr(2,i,2) + Xmir(1,i,1)*vr(1,i,2)*vr(3,i,1)*vr(3,i,2) ...
        - Xmir(1,i,2)*vr(1,i,2)*vr(2,i,1)*vr(2,i,2) - Xmir(1,i,2)*vr(1,i,2)*vr(3,i,1)*vr(3,i,2) - vr(2,i,1)*Xmir(2,i,1)*vr(3,i,2)*vr(3,i,2) ...
        + vr(2,i,1)*Xmir(2,i,2)*vr(3,i,2)*vr(3,i,2) - vr(3,i,1)*Xmir(3,i,1)*vr(2,i,2)*vr(2,i,2) + vr(3,i,1)*Xmir(3,i,2)*vr(2,i,2)*vr(2,i,2) ) ...
        / ( -vr(1,i,2)*vr(1,i,1)*vr(2,i,1)*vr(2,i,2) - vr(1,i,2)*vr(1,i,1)*vr(3,i,1)*vr(3,i,2) - vr(2,i,2)*vr(2,i,1)*vr(1,i,1)*vr(1,i,2) ...
        - vr(2,i,2)*vr(2,i,1)*vr(3,i,1)*vr(3,i,2) - vr(3,i,2)*vr(3,i,1)*vr(1,i,1)*vr(1,i,2) - vr(3,i,2)*vr(3,i,1)*vr(2,i,1)*vr(2,i,2) ... 
        + vr(1,i,2)*vr(1,i,2)*vr(2,i,1)*vr(2,i,1) + vr(1,i,2)*vr(1,i,2)*vr(3,i,1)*vr(3,i,1) + vr(2,i,2)*vr(2,i,2)*vr(1,i,1)*vr(1,i,1) ...
        + vr(2,i,2)*vr(2,i,2)*vr(3,i,1)*vr(3,i,1) + vr(3,i,2)*vr(3,i,2)*vr(1,i,1)*vr(1,i,1) + vr(3,i,2)*vr(3,i,2)*vr(2,i,1)*vr(2,i,1) );

    s = ( vr(1,i,2)*Xmir(1,i,1)*vr(2,i,1)*vr(2,i,1) + vr(1,i,2)*Xmir(1,i,1)*vr(3,i,1)*vr(3,i,1) - vr(1,i,2)*Xmir(1,i,2)*vr(2,i,1)*vr(2,i,1) ...
        - vr(1,i,2)*Xmir(1,i,2)*vr(3,i,1)*vr(3,i,1) + vr(2,i,2)*Xmir(2,i,1)*vr(1,i,1)*vr(1,i,1) + vr(2,i,2)*Xmir(2,i,1)*vr(3,i,1)*vr(3,i,1) ...
        - vr(2,i,2)*Xmir(2,i,2)*vr(1,i,1)*vr(1,i,1) - vr(2,i,2)*Xmir(2,i,2)*vr(3,i,1)*vr(3,i,1) + vr(3,i,2)*Xmir(3,i,1)*vr(1,i,1)*vr(1,i,1) ...
        + vr(3,i,2)*Xmir(3,i,1)*vr(2,i,1)*vr(2,i,1) - vr(3,i,2)*Xmir(3,i,2)*vr(1,i,1)*vr(1,i,1) - vr(3,i,2)*Xmir(3,i,2)*vr(2,i,1)*vr(2,i,1) ...
        - vr(1,i,2)*vr(1,i,1)*vr(2,i,1)*Xmir(2,i,1) + vr(1,i,2)*vr(1,i,1)*vr(2,i,1)*Xmir(2,i,2) - vr(1,i,2)*vr(1,i,1)*vr(3,i,1)*Xmir(3,i,1) ...
        + vr(1,i,2)*vr(1,i,1)*vr(3,i,1)*Xmir(3,i,2) - vr(2,i,2)*vr(2,i,1)*vr(1,i,1)*Xmir(1,i,1) + vr(2,i,2)*vr(2,i,1)*vr(1,i,1)*Xmir(1,i,2) ...
        - vr(2,i,2)*vr(2,i,1)*vr(3,i,1)*Xmir(3,i,1) + vr(2,i,2)*vr(2,i,1)*vr(3,i,1)*Xmir(3,i,2) - vr(3,i,2)*vr(3,i,1)*vr(1,i,1)*Xmir(1,i,1) ...
        + vr(3,i,2)*vr(3,i,1)*vr(1,i,1)*Xmir(1,i,2) - vr(3,i,2)*vr(3,i,1)*vr(2,i,1)*Xmir(2,i,1) + vr(3,i,2)*vr(3,i,1)*vr(2,i,1)*Xmir(2,i,2) ) ...
        / ( - vr(1,i,2)*vr(1,i,1)*vr(2,i,1)*vr(2,i,2) - vr(1,i,2)*vr(1,i,1)*vr(3,i,1)*vr(3,i,2) - vr(2,i,2)*vr(2,i,1)*vr(1,i,1)*vr(1,i,2) ...
        - vr(2,i,2)*vr(2,i,1)*vr(3,i,1)*vr(3,i,2) - vr(3,i,2)*vr(3,i,1)*vr(1,i,1)*vr(1,i,2) - vr(3,i,2)*vr(3,i,1)*vr(2,i,1)*vr(2,i,2) ...
        + vr(1,i,2)*vr(1,i,2)*vr(2,i,1)*vr(2,i,1) + vr(1,i,2)*vr(1,i,2)*vr(3,i,1)*vr(3,i,1) + vr(2,i,2)*vr(2,i,2)*vr(1,i,1)*vr(1,i,1) ...
        + vr(2,i,2)*vr(2,i,2)*vr(3,i,1)*vr(3,i,1) + vr(3,i,2)*vr(3,i,2)*vr(1,i,1)*vr(1,i,1) + vr(3,i,2)*vr(3,i,2)*vr(2,i,1)*vr(2,i,1) );

    S1(:,i) = Xmir(:,i,1) + r*vr(:,i,1);    
    S2(:,i) = Xmir(:,i,2) + s*vr(:,i,2); 

    %Intersection point 
    S(:,i) = (S1(:,i) + S2(:,i)) ./ 2 ;

end